<?php

/**
 * @file
 * Primary module hooks for Schema.org Report module.
 */

declare(strict_types = 1);

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function schemadotorg_report_help(string $route_name, RouteMatchInterface $route_match): string|array|null {
  switch ($route_name) {
    case 'schemadotorg_report':
      /** @var \Drupal\schemadotorg\SchemaDotOrgSchemaTypeManagerInterface $schema_type_manager */
      $schema_type_manager = \Drupal::service('schemadotorg.schema_type_manager');
      $id = $route_match->getRawParameter('id');
      if ($schema_type_manager->isType($id)) {
        return '<p>' . t('The <em>Schema.org: Type</em> page displays all information about a Schema.org type.') . '</p>';
      }
      elseif ($schema_type_manager->isProperty($id)) {
        return '<p>' . t('The <em>Schema.org: Property</em> page displays all information about a Schema.org property.') . '</p>';
      }
      else {
        return '<p>' . t('The <strong>Schema.org: About</strong> report allows users to browse all available Schema.org types and properties within the Drupal admin UI.') . '</p>';
      }

    case 'schemadotorg_report.settings':
      return '<p>' . t('The <em>Schema.org references settings</em> page allows administrators to configure links to general and specific information about Schema.org types.') . '<p>';

    case 'schemadotorg_report.types':
      return '<p>' . t('The <strong>Schema.org: Types</strong> report lists all available Schema.org types, enumerations, and data types.') . '</p>';

    case 'schemadotorg_report.types.things':
      return '<p>' . t('The <em>Schema.org: Things</em> page displays a hierarchical tree of Schema.org Things.') . '</p>';

    case 'schemadotorg_report.types.intangibles':
      return '<p>' . t('The <em>Schema.org: Intangibles</em> page displays a hierarchical tree of Schema.org Intangibles, which includes values which are part of other Schema.org Things.') . '</p>';

    case 'schemadotorg_report.types.enumerations':
      return '<p>' . t('The <em>Schema.org: Enumerations</em> page displays a hierarchical tree of Schema.org Enumerations, which are listings of common items associated with the value of a property.') . '</p>';

    case 'schemadotorg_report.types.structured_values':
      return '<p>' . t('The <em>Schema.org: Structured values</em> page displays a hierarchical tree of Schema.org Structured Values, which are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.') . '</p>';

    case 'schemadotorg_report.types.data_types':
      return '<p>' . t('The <em>Schema.org: Data type</em> page displays a hierarchical tree of the basic data types available to Schema.org properties, such as Integers, Strings, etc.') . '</p>';

    case 'schemadotorg_report.properties':
      return '<p>' . t('The <strong>Schema.org: Properties</strong> report lists all available Schema.org properties.') . '</p>';

    case 'schemadotorg_report.mappings.recommendations':
      return '<p>' . t('The <strong>Schema.org: Mappings recommendations</strong> report lists recommended types and default properties for Drupal entity type to Schema.org type mapping.') . '</p>';

    case 'schemadotorg_report.mappings.relationships':
      return '<p>' . t("The <strong>Schema.org: Mappings relationships</strong> report lists entity reference field relationships from a Schema.org property's range includes to a corresponding mapping's Schema.org type.") . '</p>';

    case 'schemadotorg_report.names':
      return '<p>' . t("The <strong>Schema.org: Names overview</strong> report summarizes the abbreviations used to convert Schema.org type and property names to Drupal entity type and field names.") . '</p>';

    case 'schemadotorg_report.names.all':
      return '<p>' . t('The <strong>Schema.org: All names</strong> report lists Schema.org types and properties and their corresponding entity type ids and field names.') . '</p>';

    case 'schemadotorg_report.names.types':
      return '<p>' . t('The <strong>Schema.org: Type names</strong> report lists Schema.org types and corresponding entity type ids.') . '</p>';

    case 'schemadotorg_report.names.properties':
      return '<p>' . t('The <strong>Schema.org: Property names</strong> report lists Schema.org properties and corresponding field names.') . '</p>';

    case 'schemadotorg_report.names.abbreviations':
      return '<p>' . t('The <strong>Schema.org: Abbreviated names</strong> report lists the abbreviated Schema.org types and properties their corresponding entity type ids and field names.') . '</p>';

    case 'schemadotorg_report.references':
      return '<p>' . t('The <em>Schema.org: References</em> page lists Schema.org references and issues.') . '</p>';
  }

  /** @var \Drupal\schemadotorg\SchemaDotOrgHelpManagerInterface $help_manager */
  $help_manager = \Drupal::service('schemadotorg.help_manager');
  return $help_manager->buildHelpPage($route_name, $route_match);
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function schemadotorg_report_menu_local_tasks_alter(array &$data, string $route_name): void {
  // Always point to the About page/tab to the same URL, which it shares
  // with the type and property detail page.
  // @see \Drupal\schemadotorg_report\Controller\SchemaDotOrgReportItemController::index
  if ($route_name === 'schemadotorg_report'
    && isset($data['tabs'][0]['schemadotorg_report']['#link']['url'])) {
    $data['tabs'][0]['schemadotorg_report']['#link']['url'] = Url::fromRoute('schemadotorg_report');
  }
}
