<?php

/**
 * @file
 * Allows Smart Dates to be used to create Schema.org relationships.
 */

declare(strict_types = 1);

use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function schemadotorg_smart_date_help(string $route_name, RouteMatchInterface $route_match): array|null {
  /** @var \Drupal\schemadotorg\SchemaDotOrgHelpManagerInterface $help_manager */
  $help_manager = \Drupal::service('schemadotorg.help_manager');
  return $help_manager->buildHelpPage($route_name, $route_match);
}

/* ************************************************************************** */
// Schema.org field alter hooks.
/* ************************************************************************** */

/**
 * Implements hook_schemadotorg_property_field_alter().
 */
function schemadotorg_smart_date_schemadotorg_property_field_alter(
  string $schema_type,
  string $schema_property,
  array &$field_storage_values,
  array &$field_values,
  ?string &$widget_id,
  array &$widget_settings,
  ?string &$formatter_id,
  array &$formatter_settings
): void {
  // Make sure the field type is set to 'smartdate'.
  if ($field_storage_values['type'] !== 'smartdate') {
    return;
  }

  // Set field instance default value.
  $field_values['default_value'] = [
    [
      'default_duration' => 60,
      'default_duration_increments' => "30\r\n60|1 hour\r\n90\r\n120|2 hours\r\ncustom",
      'default_date_type' => 'next_hour',
      'default_date' => '',
      'min' => '',
      'max' => '',
    ],
  ];

  // If the 'Smart Date Recurring' module is installed, use for the field and
  // formatter.
  if (\Drupal::moduleHandler()->moduleExists('smart_date_recur')) {
    $field_values['third_party_settings'] = [
      'smart_date_recur' => [
        'allow_recurring' => TRUE,
        'month_limit' => 12,
      ],
    ];
    $formatter_id = 'smartdate_recurring';
    $formatter_settings = [
      'timezone_override' => '',
      'format_type' => 'medium',
      'format' => 'default',
      'force_chronological' => FALSE,
      'add_classes' => FALSE,
      'time_wrapper' => TRUE,
    ];
  }
}

/* ************************************************************************** */
// Schema.org JSON-LD alterations.
/* ************************************************************************** */

/**
 * Implements hook_schemadotorg_jsonld_schema_type_field_alter().
 */
function schemadotorg_smart_date_schemadotorg_jsonld_schema_type_field_alter(array &$data, FieldItemListInterface $items): void {
  /** @var \Drupal\schemadotorg_smart_date\SchemaDotOrgSmartDateJsonLdManagerInterface $jsonld_manager */
  $jsonld_manager = \Drupal::service('schemadotorg_smart_date.jsonld_manager');
  $jsonld_manager->alterProperties($data, $items);
}
